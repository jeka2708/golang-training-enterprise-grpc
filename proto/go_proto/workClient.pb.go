// you can generate go models by the following command:
// protoc -I . workClient.proto --grpc-gateway_out . --go_out=plugins=grpc:.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.15.8
// source: workClient.proto

package go_proto

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataWorkClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	FirstNameC   string `protobuf:"bytes,2,opt,name=FirstNameC,proto3" json:"FirstNameC,omitempty"`
	LastNameC    string `protobuf:"bytes,3,opt,name=LastNameC,proto3" json:"LastNameC,omitempty"`
	MiddleNameC  string `protobuf:"bytes,4,opt,name=MiddleNameC,proto3" json:"MiddleNameC,omitempty"`
	PhoneNumberC string `protobuf:"bytes,5,opt,name=PhoneNumberC,proto3" json:"PhoneNumberC,omitempty"`
	FirstName    string `protobuf:"bytes,6,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName     string `protobuf:"bytes,7,opt,name=LastName,proto3" json:"LastName,omitempty"`
	MiddleName   string `protobuf:"bytes,8,opt,name=MiddleName,proto3" json:"MiddleName,omitempty"`
	PhoneNumber  string `protobuf:"bytes,9,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	Name         string `protobuf:"bytes,10,opt,name=Name,proto3" json:"Name,omitempty"`
	Cost         string `protobuf:"bytes,11,opt,name=Cost,proto3" json:"Cost,omitempty"`
	ClientId     int64  `protobuf:"varint,12,opt,name=ClientId,proto3" json:"ClientId,omitempty"`
	WorkId       int64  `protobuf:"varint,13,opt,name=WorkId,proto3" json:"WorkId,omitempty"`
}

func (x *DataWorkClient) Reset() {
	*x = DataWorkClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workClient_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataWorkClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataWorkClient) ProtoMessage() {}

func (x *DataWorkClient) ProtoReflect() protoreflect.Message {
	mi := &file_workClient_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataWorkClient.ProtoReflect.Descriptor instead.
func (*DataWorkClient) Descriptor() ([]byte, []int) {
	return file_workClient_proto_rawDescGZIP(), []int{0}
}

func (x *DataWorkClient) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DataWorkClient) GetFirstNameC() string {
	if x != nil {
		return x.FirstNameC
	}
	return ""
}

func (x *DataWorkClient) GetLastNameC() string {
	if x != nil {
		return x.LastNameC
	}
	return ""
}

func (x *DataWorkClient) GetMiddleNameC() string {
	if x != nil {
		return x.MiddleNameC
	}
	return ""
}

func (x *DataWorkClient) GetPhoneNumberC() string {
	if x != nil {
		return x.PhoneNumberC
	}
	return ""
}

func (x *DataWorkClient) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *DataWorkClient) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *DataWorkClient) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *DataWorkClient) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *DataWorkClient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DataWorkClient) GetCost() string {
	if x != nil {
		return x.Cost
	}
	return ""
}

func (x *DataWorkClient) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *DataWorkClient) GetWorkId() int64 {
	if x != nil {
		return x.WorkId
	}
	return 0
}

type ListWorkClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListWorkClientRequest) Reset() {
	*x = ListWorkClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workClient_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkClientRequest) ProtoMessage() {}

func (x *ListWorkClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_workClient_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkClientRequest.ProtoReflect.Descriptor instead.
func (*ListWorkClientRequest) Descriptor() ([]byte, []int) {
	return file_workClient_proto_rawDescGZIP(), []int{1}
}

type ListWorkClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*DataWorkClient `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListWorkClientResponse) Reset() {
	*x = ListWorkClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workClient_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListWorkClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListWorkClientResponse) ProtoMessage() {}

func (x *ListWorkClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workClient_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListWorkClientResponse.ProtoReflect.Descriptor instead.
func (*ListWorkClientResponse) Descriptor() ([]byte, []int) {
	return file_workClient_proto_rawDescGZIP(), []int{2}
}

func (x *ListWorkClientResponse) GetData() []*DataWorkClient {
	if x != nil {
		return x.Data
	}
	return nil
}

type IdWorkClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdWorkClient) Reset() {
	*x = IdWorkClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workClient_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdWorkClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdWorkClient) ProtoMessage() {}

func (x *IdWorkClient) ProtoReflect() protoreflect.Message {
	mi := &file_workClient_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdWorkClient.ProtoReflect.Descriptor instead.
func (*IdWorkClient) Descriptor() ([]byte, []int) {
	return file_workClient_proto_rawDescGZIP(), []int{3}
}

func (x *IdWorkClient) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type StatusWorkClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StatusWorkClientResponse) Reset() {
	*x = StatusWorkClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_workClient_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusWorkClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusWorkClientResponse) ProtoMessage() {}

func (x *StatusWorkClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_workClient_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusWorkClientResponse.ProtoReflect.Descriptor instead.
func (*StatusWorkClientResponse) Descriptor() ([]byte, []int) {
	return file_workClient_proto_rawDescGZIP(), []int{4}
}

func (x *StatusWorkClientResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_workClient_proto protoreflect.FileDescriptor

var file_workClient_proto_rawDesc = []byte{
	0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfc, 0x02, 0x0a,
	0x0e, 0x44, 0x61, 0x74, 0x61, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x12,
	0x1c, 0x0a, 0x09, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x12, 0x20, 0x0a,
	0x0b, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x12,
	0x22, 0x0a, 0x0c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x43, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x4c,
	0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x48, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x57, 0x6f,
	0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1e,
	0x0a, 0x0c, 0x49, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34,
	0x0a, 0x18, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x32, 0xde, 0x03, 0x0a, 0x11, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x0d, 0x52, 0x65,
	0x61, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x68, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a,
	0x18, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x64, 0x57,
	0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x18, 0x22, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x2d,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x74, 0x0a, 0x10, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x2e,
	0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x49, 0x64, 0x57, 0x6f, 0x72,
	0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x24, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x2a, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x77,
	0x6f, 0x72, 0x6b, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x74, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a,
	0x24, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x57, 0x6f, 0x72, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x1a, 0x13, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x2d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x42, 0x0b, 0x5a, 0x09, 0x2f, 0x67, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_workClient_proto_rawDescOnce sync.Once
	file_workClient_proto_rawDescData = file_workClient_proto_rawDesc
)

func file_workClient_proto_rawDescGZIP() []byte {
	file_workClient_proto_rawDescOnce.Do(func() {
		file_workClient_proto_rawDescData = protoimpl.X.CompressGZIP(file_workClient_proto_rawDescData)
	})
	return file_workClient_proto_rawDescData
}

var file_workClient_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_workClient_proto_goTypes = []interface{}{
	(*DataWorkClient)(nil),           // 0: WorkClient.DataWorkClient
	(*ListWorkClientRequest)(nil),    // 1: WorkClient.ListWorkClientRequest
	(*ListWorkClientResponse)(nil),   // 2: WorkClient.ListWorkClientResponse
	(*IdWorkClient)(nil),             // 3: WorkClient.IdWorkClient
	(*StatusWorkClientResponse)(nil), // 4: WorkClient.StatusWorkClientResponse
}
var file_workClient_proto_depIdxs = []int32{
	0, // 0: WorkClient.ListWorkClientResponse.data:type_name -> WorkClient.DataWorkClient
	1, // 1: WorkClient.WorkClientService.ReadAllClient:input_type -> WorkClient.ListWorkClientRequest
	0, // 2: WorkClient.WorkClientService.CreateWorkClient:input_type -> WorkClient.DataWorkClient
	3, // 3: WorkClient.WorkClientService.DeleteWorkClient:input_type -> WorkClient.IdWorkClient
	0, // 4: WorkClient.WorkClientService.UpdateWorkClient:input_type -> WorkClient.DataWorkClient
	2, // 5: WorkClient.WorkClientService.ReadAllClient:output_type -> WorkClient.ListWorkClientResponse
	3, // 6: WorkClient.WorkClientService.CreateWorkClient:output_type -> WorkClient.IdWorkClient
	4, // 7: WorkClient.WorkClientService.DeleteWorkClient:output_type -> WorkClient.StatusWorkClientResponse
	4, // 8: WorkClient.WorkClientService.UpdateWorkClient:output_type -> WorkClient.StatusWorkClientResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_workClient_proto_init() }
func file_workClient_proto_init() {
	if File_workClient_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_workClient_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataWorkClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workClient_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workClient_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListWorkClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workClient_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdWorkClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_workClient_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusWorkClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_workClient_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_workClient_proto_goTypes,
		DependencyIndexes: file_workClient_proto_depIdxs,
		MessageInfos:      file_workClient_proto_msgTypes,
	}.Build()
	File_workClient_proto = out.File
	file_workClient_proto_rawDesc = nil
	file_workClient_proto_goTypes = nil
	file_workClient_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WorkClientServiceClient is the client API for WorkClientService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkClientServiceClient interface {
	ReadAllClient(ctx context.Context, in *ListWorkClientRequest, opts ...grpc.CallOption) (*ListWorkClientResponse, error)
	CreateWorkClient(ctx context.Context, in *DataWorkClient, opts ...grpc.CallOption) (*IdWorkClient, error)
	DeleteWorkClient(ctx context.Context, in *IdWorkClient, opts ...grpc.CallOption) (*StatusWorkClientResponse, error)
	UpdateWorkClient(ctx context.Context, in *DataWorkClient, opts ...grpc.CallOption) (*StatusWorkClientResponse, error)
}

type workClientServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWorkClientServiceClient(cc grpc.ClientConnInterface) WorkClientServiceClient {
	return &workClientServiceClient{cc}
}

func (c *workClientServiceClient) ReadAllClient(ctx context.Context, in *ListWorkClientRequest, opts ...grpc.CallOption) (*ListWorkClientResponse, error) {
	out := new(ListWorkClientResponse)
	err := c.cc.Invoke(ctx, "/WorkClient.WorkClientService/ReadAllClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workClientServiceClient) CreateWorkClient(ctx context.Context, in *DataWorkClient, opts ...grpc.CallOption) (*IdWorkClient, error) {
	out := new(IdWorkClient)
	err := c.cc.Invoke(ctx, "/WorkClient.WorkClientService/CreateWorkClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workClientServiceClient) DeleteWorkClient(ctx context.Context, in *IdWorkClient, opts ...grpc.CallOption) (*StatusWorkClientResponse, error) {
	out := new(StatusWorkClientResponse)
	err := c.cc.Invoke(ctx, "/WorkClient.WorkClientService/DeleteWorkClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workClientServiceClient) UpdateWorkClient(ctx context.Context, in *DataWorkClient, opts ...grpc.CallOption) (*StatusWorkClientResponse, error) {
	out := new(StatusWorkClientResponse)
	err := c.cc.Invoke(ctx, "/WorkClient.WorkClientService/UpdateWorkClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkClientServiceServer is the server API for WorkClientService service.
type WorkClientServiceServer interface {
	ReadAllClient(context.Context, *ListWorkClientRequest) (*ListWorkClientResponse, error)
	CreateWorkClient(context.Context, *DataWorkClient) (*IdWorkClient, error)
	DeleteWorkClient(context.Context, *IdWorkClient) (*StatusWorkClientResponse, error)
	UpdateWorkClient(context.Context, *DataWorkClient) (*StatusWorkClientResponse, error)
}

// UnimplementedWorkClientServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWorkClientServiceServer struct {
}

func (*UnimplementedWorkClientServiceServer) ReadAllClient(context.Context, *ListWorkClientRequest) (*ListWorkClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAllClient not implemented")
}
func (*UnimplementedWorkClientServiceServer) CreateWorkClient(context.Context, *DataWorkClient) (*IdWorkClient, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWorkClient not implemented")
}
func (*UnimplementedWorkClientServiceServer) DeleteWorkClient(context.Context, *IdWorkClient) (*StatusWorkClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWorkClient not implemented")
}
func (*UnimplementedWorkClientServiceServer) UpdateWorkClient(context.Context, *DataWorkClient) (*StatusWorkClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWorkClient not implemented")
}

func RegisterWorkClientServiceServer(s *grpc.Server, srv WorkClientServiceServer) {
	s.RegisterService(&_WorkClientService_serviceDesc, srv)
}

func _WorkClientService_ReadAllClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWorkClientRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkClientServiceServer).ReadAllClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WorkClient.WorkClientService/ReadAllClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkClientServiceServer).ReadAllClient(ctx, req.(*ListWorkClientRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkClientService_CreateWorkClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataWorkClient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkClientServiceServer).CreateWorkClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WorkClient.WorkClientService/CreateWorkClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkClientServiceServer).CreateWorkClient(ctx, req.(*DataWorkClient))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkClientService_DeleteWorkClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdWorkClient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkClientServiceServer).DeleteWorkClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WorkClient.WorkClientService/DeleteWorkClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkClientServiceServer).DeleteWorkClient(ctx, req.(*IdWorkClient))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkClientService_UpdateWorkClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataWorkClient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkClientServiceServer).UpdateWorkClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/WorkClient.WorkClientService/UpdateWorkClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkClientServiceServer).UpdateWorkClient(ctx, req.(*DataWorkClient))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorkClientService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "WorkClient.WorkClientService",
	HandlerType: (*WorkClientServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReadAllClient",
			Handler:    _WorkClientService_ReadAllClient_Handler,
		},
		{
			MethodName: "CreateWorkClient",
			Handler:    _WorkClientService_CreateWorkClient_Handler,
		},
		{
			MethodName: "DeleteWorkClient",
			Handler:    _WorkClientService_DeleteWorkClient_Handler,
		},
		{
			MethodName: "UpdateWorkClient",
			Handler:    _WorkClientService_UpdateWorkClient_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "workClient.proto",
}
